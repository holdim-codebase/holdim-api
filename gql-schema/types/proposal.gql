type ProposalPersonalizedData {
  pickedEmojiId: ID
}

type EmojiCountItem {
  emojiId: ID!
  count: Int!
}

type ProposalStatisticData {
  emojiCount: [EmojiCountItem!]!
}

# Proposal poll types were taken from Snapshot GraphQL API
type ProposalPoll {
  scores: [Float]
  choices: [String]!
  symbol: String!
  scores_total: Float
  votes: Int
  quorum: Float!
}

type Proposal implements Node {
  id: ID!
  snapshotId: ID!
  title: String!
  dao: DAO!
  juniorDescription: String!
  middleDescription: String!
  seniorDescription: String!
  # UNIX Timestamp (in ms)
  startAt: String!
  # UNIX Timestamp (in ms)
  endAt: String!
  author: String!
  snapshotLink: String!
  discussionLink: String
  personalizedData: ProposalPersonalizedData
  statisticData: ProposalStatisticData

  poll: ProposalPoll
}
